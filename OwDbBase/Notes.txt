$(MSBuildProjectName.Replace(" ", "_"))

using System;
using System.Collections.Generic;
using System.IO;
using NPOI.SS.UserModel;
using NPOI.XSSF.UserModel;

public class ExcelReader
{
    public static List<Dictionary<string, object>> ReadExcelSheet(Stream stream, string sheetName)
    {
        var result = new List<Dictionary<string, object>>();

        // 打开 Excel 文件
        IWorkbook workbook = new XSSFWorkbook(stream);
        ISheet sheet = workbook.GetSheet(sheetName);

        if (sheet == null)
        {
            throw new ArgumentException($"Sheet {sheetName} not found in the provided stream.");
        }

        // 获取表头行
        IRow headerRow = sheet.GetRow(0);
        int cellCount = headerRow.LastCellNum;

        for (int i = 1; i <= sheet.LastRowNum; i++) // 从第二行开始，因为第一行是表头
        {
            IRow row = sheet.GetRow(i);
            if (row == null) continue; // 跳过空行

            var dict = new Dictionary<string, object>();

            for (int j = 0; j < cellCount; j++)
            {
                ICell cell = row.GetCell(j);
                string header = headerRow.GetCell(j)?.ToString() ?? string.Empty;
                object value = null;

                if (cell != null)
                {
                    switch (cell.CellType)
                    {
                        case CellType.String:
                            value = cell.StringCellValue;
                            break;
                        case CellType.Numeric:
                            if (DateUtil.IsCellDateFormatted(cell))
                            {
                                value = cell.DateCellValue;
                            }
                            else
                            {
                                value = cell.NumericCellValue;
                            }
                            break;
                        case CellType.Boolean:
                            value = cell.BooleanCellValue;
                            break;
                        case CellType.Formula:
                            value = cell.CellFormula;
                            break;
                        default:
                            value = cell.ToString();
                            break;
                    }
                }

                dict[header] = value;
            }

            result.Add(dict);
        }

        return result;
    }

    public static void Main(string[] args)
    {
        string filePath = "path/to/your/excel/file.xlsx";
        string sheetName = "Sheet1"; // 替换为您想要读取的工作表名称

        try
        {
            using (FileStream file = new FileStream(filePath, FileMode.Open, FileAccess.Read))
            {
                var data = ReadExcelSheet(file, sheetName);
                foreach (var item in data)
                {
                    Console.WriteLine(string.Join(", ", item));
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"读取 Excel 文件时出错: {ex.Message}");
        }
    }
}
